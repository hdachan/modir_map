
          Container(
            width: 360.w,
            height: 80.h,
            padding: EdgeInsets.only(left: 16.w, top: 16.h, right: 16.w, bottom: 16.h),
            decoration: BoxDecoration(
              color: Colors.white,
              border: Border(
                left: BorderSide(color: Color(0xFFE7E7E7)),
                top: BorderSide(color: Color(0xFFE7E7E7)),
                right: BorderSide(color: Color(0xFFE7E7E7)),
                bottom: BorderSide(width: 1.w, color: Color(0xFFE7E7E7)),
              ),
            ),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Container(
                  width: 270.w,
                  height: 48.h,
                  decoration: ShapeDecoration(
                    color: Color(0xFFF6F6F6),
                    shape: RoundedRectangleBorder(
                      side: BorderSide(width: 1.w, color: Color(0xFFE7E7E7)),
                      borderRadius: BorderRadius.circular(8.w), // 둥글게 모서리 설정
                    ),
                  ),
                  child: TextField(
                    decoration: InputDecoration(
                      border: InputBorder.none, // 기본 테두리 제거
                      contentPadding: EdgeInsets.only(left: 16.w, top: 12.h, right: 16.w, bottom: 12.h), // 패딩 설정
                      hintText: '스타일, 브랜드, 매장, 위치 검색', // 힌트 텍스트
                      hintStyle: TextStyle(
                        color: Color(0xFF888888), // 힌트 텍스트 색상
                      ),
                    ),
                    style: TextStyle(
                      color: Color(0xFF888888), // 입력 텍스트 색상
                      fontSize: 14,
                      fontFamily: 'Pretendard',
                      fontWeight: FontWeight.w500,
                      height: 1.70,
                      letterSpacing: -0.35,
                    ),
                  ),
                ),
                SizedBox(width: 8.w), // 사이즈 박스 8픽셀
                Container(
                  width: 48.w,
                  height: 48.h,
                  decoration: BoxDecoration(
                    color: Color(0xFF4D17EE), // 새로운 색상
                    borderRadius: BorderRadius.circular(8.w), // 둥글게 모서리 설정
                  ),
                  padding: EdgeInsets.only(left: 12.w, top: 12.h, right: 12.w, bottom: 12.h),
                  child: SizedBox(
                    width: 24.w,
                    height: 24.h,
                    child: Icon(
                      Icons.filter_list,
                      color: Colors.white, // 아이콘 색상
                      size: 24.sp, // 아이콘 크기
                    ),
                  ),
                ),
              ],
            ),
          ),

          Container(
            width: 360.w,
            height: 56.h,
            color: Colors.white,
            padding: EdgeInsets.only(left: 16.w, top: 12.h, right: 16.w, bottom: 12.h),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.center, // 중앙 정렬
              children: [
                Container(
                  width: 328.w,
                  height: 48.h,
                  color: Colors.white, // 내부 컨테이너 색상
                ),
              ],
            ),
          ),






import 'package:flutter/foundation.dart' show kIsWeb;
import 'package:flutter/material.dart';

class SettingState extends ChangeNotifier {
  // 웹 여부 상태
  bool _isWeb = kIsWeb;
  bool get isWeb => _isWeb;

  // 현재 선택된 하단바 인덱스
  int _selectedIndex = 0;
  int get selectedIndex => _selectedIndex;

  // 플랫폼 전환 메서드
  void togglePlatform() {
    _isWeb = !_isWeb;
    notifyListeners();
  }

  // 하단바 인덱스 변경 메서드
  void updateIndex(int index) {
    _selectedIndex = index;
    notifyListeners();
  }
}

























import 'package:flutter/material.dart';
import 'package:flutter_naver_map/flutter_naver_map.dart';

class NaverMapBackground extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // 화면의 너비를 가져옵니다.
    double screenWidth = MediaQuery.of(context).size.width;

    return Container(
      width: screenWidth, // 화면 너비에 맞게 설정
      color: Colors.black,
      child: Column(
        children: [
          // 상단 부분
          Container(
            width: screenWidth * 1.0, // 화면 너비의 100%로 설정
            height: 80,
            color: Colors.cyanAccent,
            padding: EdgeInsets.all(16),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Container(
                  width: screenWidth * (272 / 360), // 내부 컨테이너 너비
                  height: 48,
                  color: Colors.white, // 내부 컨테이너 색상
                ),
                SizedBox(width: 8), // 사이즈 박스 8픽셀
                Container(
                  width: screenWidth * (48 / 360), // 360 기준으로 48픽셀
                  height: 48,
                  color: Colors.blue, // 파란색 컨테이너
                ),
              ],
            ),
          ),
          Container(
            width: screenWidth * 1.0, // 화면 너비의 100%로 설정
            height: 56,
            color: Colors.red,
            padding: EdgeInsets.only(left: 16.0, top: 12.0, right: 16.0, bottom: 12.0),
            child: Row(
              children: [
                Container(
                  width: screenWidth * (328 / 360), // 내부 컨테이너 너비
                  height: 48,
                  color: Colors.white, // 내부 컨테이너 색상
                ),

              ],
            ),
          ),

          // 네이버 지도 부분
          Expanded(
            child: Stack(
              children: [
                // 네이버 지도
                NaverMap(
                  onMapReady: (controller) {
                    final marker = NMarker(
                      id: 'test',
                      position: const NLatLng(37.506932467450326, 127.05578661133796),
                    );
                    controller.addOverlay(marker);

                    final onMarkerInfoWindow = NInfoWindow.onMarker(
                      id: marker.info.id,
                      text: "멋쟁이",
                    );
                    marker.openInfoWindow(onMarkerInfoWindow);
                  },
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}

// NaverMapProvider 클래스 정의
class NaverMapProvider with ChangeNotifier {
  // 상태 관리에 필요한 변수와 메서드 정의
}
